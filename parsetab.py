
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORXORleftLESSTHANGREATERTHANLESSEQUALTHANGREATEREQUALTHANIS_EQUALNOTEQUALrightEQUALABSTRACT AND ARRAY BITAND BITNOT BITOR BOOL BREAK CASE CLOSE_TAG COLON COMMA CONCAT CONCATASSIGN CONTINUE DECREMENT DEFAULT DIVIDE DIVIDEASSIGN DOC_COMMENT DOUBLEQUOTE ECHO ELSE EQUAL ERRORCONTROL EXECUTION EXP EXPASSIGN FGETS FLOAT FN FNARROW FOR FUNCTION GREATEREQUALTHAN GREATERTHAN ID IDENTICAL IF INCREMENT INTEGER IS_EQUAL LCURLY LESSEQUALTHAN LESSTHAN LOGICALNOT LPAREN LSQUARE MINUS MINUSASSIGN MOD MODASSIGN NEW NOTEQUAL NULL OBJOP OPEN_TAG OR PLUS PLUSASSIGN POP PRINT PUSH QUEUE QUOTE RCURLY RPAREN RSQUARE SEMICOLON STACK STDIN STRING SWITCH TIMES TIMESASSIGN VAR XORprograma : cuerpo\n                | programa cuerpo\n    cuerpo : arithmeticExpression\n              | if_elseStatement\n              | forStatement\n              | switchStatement\n              | arrayAsignation\n              | queueDeclaration\n              | queueEnqueue\n              | queueDequeue\n              | defineFunction\n              | anonymousFunction\n              | arrowFunction\n              | echo\n              | fgets\n              | stackDeclaration\n              | stackPush\n              | stackPop\n              | line\n              | print\n              | logicalCondition\n              | OPEN_TAG\n              | CLOSE_TAG\n              | stringConcatenation\n              | callFunction\n    switchStatement : SWITCH LPAREN value RPAREN LCURLY switchCases switchDefault RCURLYswitchDefault : DEFAULT COLON programaswitchCase : CASE value COLON programa BREAK SEMICOLONswitchCases : switchCase\n                   | switchCases switchCase\n    if_elseStatement : IF LPAREN logicalCondition RPAREN LCURLY ifStatementBody RCURLY ELSE LCURLY ifStatementBody RCURLY\n                        | IF LPAREN logicalCondition RPAREN LCURLY ifStatementBody\n                        ifStatementBody : cuerpo\n                       | cuerpo CONTINUE SEMICOLON\n                       | CONTINUE SEMICOLON\n                       | ifStatementBody cuerpo\n                       forStatement : FOR LPAREN forStatementCondition RPAREN LCURLY forStatementBody RCURLYforStatementCondition :  SEMICOLON SEMICOLON \n                            |  variableAsignation SEMICOLON SEMICOLON variableAsignation\n                            |  variableAsignation SEMICOLON comparingValue SEMICOLON variableAsignation\n                            forStatementBody : cuerpo \n                        | forStatementBody cuerpo\n                        arrayAsignation : VAR EQUAL arrayDeclaration SEMICOLON arrayDeclaration : ARRAY arraysValues RPAREN\n                        | LSQUARE arraysValues RSQUARE\n                        | arrayValue \n                         arraysValues : arrayValue \n                    | arraysValues COMMA arrayValue\n                    arrayValue : ARRAY values RPAREN\n                    | LSQUARE values RSQUARE\n                    stackDeclaration : VAR EQUAL NEW STACK SEMICOLONstackPush : VAR OBJOP PUSH LPAREN value RPAREN SEMICOLONstackPop : VAR OBJOP POP SEMICOLONqueueDeclaration : VAR EQUAL NEW QUEUE SEMICOLONqueueEnqueue : VAR OBJOP PUSH LPAREN value RPAREN SEMICOLONqueueDequeue : VAR OBJOP POP SEMICOLONdefineFunction : FUNCTION ID LPAREN arguments RPAREN LCURLY programa RCURLY\n                    | FUNCTION ID LPAREN RPAREN LCURLY programa RCURLY\n                    arguments : VAR\n                | VAR COMMA arguments\n                anonymousFunction : FUNCTION LPAREN RPAREN LCURLY cuerpo RCURLY \n                         | FUNCTION LPAREN arguments RPAREN LCURLY cuerpo RCURLY\n                         arrowFunction : FN LPAREN VAR RPAREN FNARROW arrowBody SEMICOLONarrowBody : FN LPAREN VAR RPAREN FNARROW arrowBody\n                 | cuerpo\n    echo : ECHO values SEMICOLON\n    print : PRINT LPAREN values RPAREN SEMICOLON\n          | PRINT value SEMICOLON\n    values : value\n              | values COMMA value\n    fgets : VAR EQUAL FGETS LPAREN STDIN RPAREN SEMICOLONarithmeticExpression : valuearithmeticExpression : STRINGarithmeticExpression : LPAREN arithmeticExpression RPARENarithmeticExpression : arithmeticExpression arithmeticOperator arithmeticExpressioncallFunction : ID LPAREN RPAREN SEMICOLONcallFunction : ID LPAREN value RPAREN SEMICOLONvalue : VAR\n             | INTEGER\n             | FLOAT\n             | STRING\n             | stringConcatenation\n    arithmeticOperator : PLUS\n                          | MINUS \n                          | TIMES \n                          | DIVIDE\n                          | MOD\n                          | EXP\n    line : variableAsignation SEMICOLON\n    variableAsignation : VAR EQUAL value\n                          | VAR EQUAL arithmeticExpression\n                          | VAR INCREMENT\n                          | VAR DECREMENT\n                          | VAR EQUAL stringConcatenation\n                          | VAR EQUAL anonymousFunction\n    comparingSign : IS_EQUAL\n                        | IDENTICAL\n                        | NOTEQUAL\n                        | LESSTHAN\n                        | GREATERTHAN\n                        | LESSEQUALTHAN\n                        | GREATEREQUALTHAN\n    comparingValue : value comparingSign valuelogicalCondition : comparingValue\n                        | comparingValue conditionOperator comparingValue\n                        | LPAREN logicalCondition RPAREN\n    conditionOperator : AND\n                         | OR\n                         | XOR \n    stringConcatenation : value CONCAT valuestringConcatenation : stringConcatenation CONCAT stringConcatenation'
    
_lr_action_items = {'OPEN_TAG':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,32,39,40,41,42,63,64,78,79,86,87,89,91,92,93,94,124,127,128,135,147,150,153,158,159,163,164,173,175,177,178,179,180,181,183,184,193,194,195,201,203,204,205,211,212,213,214,215,217,219,220,221,222,223,225,226,227,229,231,232,],[22,22,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-72,-73,-78,-104,-79,-80,-2,-78,-82,-81,-89,-75,-72,-111,-110,-103,-74,-106,-66,-68,-105,-43,-53,22,-76,22,22,-54,-51,22,22,-77,22,-67,22,-33,22,-41,22,22,-61,-36,-35,-37,-42,-71,-52,22,-58,-62,-63,-34,-26,22,22,-57,22,22,22,22,22,-31,]),'CLOSE_TAG':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,32,39,40,41,42,63,64,78,79,86,87,89,91,92,93,94,124,127,128,135,147,150,153,158,159,163,164,173,175,177,178,179,180,181,183,184,193,194,195,201,203,204,205,211,212,213,214,215,217,219,220,221,222,223,225,226,227,229,231,232,],[23,23,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-72,-73,-78,-104,-79,-80,-2,-78,-82,-81,-89,-75,-72,-111,-110,-103,-74,-106,-66,-68,-105,-43,-53,23,-76,23,23,-54,-51,23,23,-77,23,-67,23,-33,23,-41,23,23,-61,-36,-35,-37,-42,-71,-52,23,-58,-62,-63,-34,-26,23,23,-57,23,23,23,23,23,-31,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,67,68,74,78,79,80,82,83,84,85,86,87,88,89,91,92,93,94,95,110,111,124,125,127,128,132,133,135,139,143,146,147,150,153,158,159,163,164,173,175,177,178,179,180,181,183,184,189,193,194,195,201,203,204,205,211,212,213,214,215,217,219,220,221,222,223,225,226,227,229,231,232,],[27,27,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-72,-73,27,-78,78,78,-104,-79,-80,-2,27,-83,-84,-85,-86,-87,-88,78,78,78,-96,-97,-98,-99,-100,-101,-102,-78,-82,78,78,113,78,-81,-89,78,78,-107,-108,-109,-75,-72,27,-111,-110,-103,-74,-106,78,78,78,-66,78,-68,-105,78,113,-43,78,78,78,-53,27,-76,27,27,-54,-51,27,27,-77,27,-67,27,-33,27,-41,78,27,27,-61,-36,-35,-37,-42,-71,-52,27,-58,-62,-63,-34,-26,27,27,-57,27,27,27,27,27,-31,]),'LPAREN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,40,41,42,43,44,45,46,47,48,49,63,64,65,68,72,78,79,86,87,88,89,91,92,93,94,95,105,114,115,124,127,128,133,135,147,150,153,158,159,163,164,173,175,177,178,179,180,181,183,184,193,194,195,197,201,203,204,205,211,212,213,214,215,217,219,220,221,222,223,225,226,227,229,231,232,],[28,28,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-72,-73,28,65,66,67,-78,73,74,75,80,-104,-79,-80,-2,88,-83,-84,-85,-86,-87,-88,-78,-82,95,88,117,-81,-89,-75,-72,88,-111,-110,-103,-74,-106,95,138,73,146,-66,-68,-105,88,-43,-53,28,-76,28,28,-54,-51,28,28,-77,28,-67,28,-33,28,-41,28,28,-61,216,-36,-35,-37,-42,-71,-52,28,-58,-62,-63,-34,-26,28,28,-57,28,28,28,28,28,-31,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,32,39,40,41,42,63,64,78,79,86,87,89,91,92,93,94,124,127,128,135,147,150,153,158,159,163,164,173,175,177,178,179,180,181,183,184,193,194,195,201,203,204,205,211,212,213,214,215,217,219,220,221,222,223,225,226,227,229,231,232,],[29,29,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-72,-73,-78,-104,-79,-80,-2,-78,-82,-81,-89,-75,-72,-111,-110,-103,-74,-106,-66,-68,-105,-43,-53,29,-76,29,29,-54,-51,29,29,-77,29,-67,29,-33,29,-41,29,29,-61,-36,-35,-37,-42,-71,-52,29,-58,-62,-63,-34,-26,29,29,-57,29,29,29,29,29,-31,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,32,39,40,41,42,63,64,78,79,86,87,89,91,92,93,94,124,127,128,135,147,150,153,158,159,163,164,173,175,177,178,179,180,181,183,184,193,194,195,201,203,204,205,211,212,213,214,215,217,219,220,221,222,223,225,226,227,229,231,232,],[30,30,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-72,-73,-78,-104,-79,-80,-2,-78,-82,-81,-89,-75,-72,-111,-110,-103,-74,-106,-66,-68,-105,-43,-53,30,-76,30,30,-54,-51,30,30,-77,30,-67,30,-33,30,-41,30,30,-61,-36,-35,-37,-42,-71,-52,30,-58,-62,-63,-34,-26,30,30,-57,30,30,30,30,30,-31,]),'SWITCH':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,32,39,40,41,42,63,64,78,79,86,87,89,91,92,93,94,124,127,128,135,147,150,153,158,159,163,164,173,175,177,178,179,180,181,183,184,193,194,195,201,203,204,205,211,212,213,214,215,217,219,220,221,222,223,225,226,227,229,231,232,],[31,31,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-72,-73,-78,-104,-79,-80,-2,-78,-82,-81,-89,-75,-72,-111,-110,-103,-74,-106,-66,-68,-105,-43,-53,31,-76,31,31,-54,-51,31,31,-77,31,-67,31,-33,31,-41,31,31,-61,-36,-35,-37,-42,-71,-52,31,-58,-62,-63,-34,-26,31,31,-57,31,31,31,31,31,-31,]),'VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,73,74,75,78,79,80,82,83,84,85,86,87,88,89,91,92,93,94,95,110,111,117,124,125,127,128,132,133,135,139,143,146,147,150,152,153,158,159,160,163,164,173,175,177,178,179,180,181,183,184,186,189,193,194,195,201,203,204,205,211,212,213,214,215,216,217,219,220,221,222,223,225,226,227,229,231,232,],[32,32,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-72,-73,63,-78,63,63,-104,-79,-80,-2,63,-83,-84,-85,-86,-87,-88,63,63,63,-96,-97,-98,-99,-100,-101,-102,-78,-82,63,101,63,63,120,63,123,-81,-89,63,63,-107,-108,-109,-75,-72,63,-111,-110,-103,-74,-106,63,63,63,120,-66,63,-68,-105,63,63,-43,63,63,63,-53,32,120,-76,32,32,101,-54,-51,32,32,-77,32,-67,32,-33,32,-41,101,63,32,32,-61,-36,-35,-37,-42,-71,-52,32,-58,-62,224,-63,-34,-26,32,32,-57,32,32,32,32,32,-31,]),'FUNCTION':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,32,39,40,41,42,63,64,68,78,79,86,87,89,91,92,93,94,124,127,128,133,135,147,150,153,158,159,163,164,173,175,177,178,179,180,181,183,184,193,194,195,201,203,204,205,211,212,213,214,215,217,219,220,221,222,223,225,226,227,229,231,232,],[33,33,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-72,-73,-78,-104,-79,-80,-2,-78,-82,114,-81,-89,-75,-72,-111,-110,-103,-74,-106,-66,-68,-105,114,-43,-53,33,-76,33,33,-54,-51,33,33,-77,33,-67,33,-33,33,-41,33,33,-61,-36,-35,-37,-42,-71,-52,33,-58,-62,-63,-34,-26,33,33,-57,33,33,33,33,33,-31,]),'FN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,32,39,40,41,42,63,64,78,79,86,87,89,91,92,93,94,124,127,128,135,147,150,153,158,159,163,164,173,175,177,178,179,180,181,183,184,193,194,195,201,203,204,205,211,212,213,214,215,217,219,220,221,222,223,225,226,227,229,231,232,],[35,35,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-72,-73,-78,-104,-79,-80,-2,-78,-82,-81,-89,-75,-72,-111,-110,-103,-74,-106,-66,-68,-105,-43,-53,35,-76,35,35,-54,-51,35,35,-77,197,-67,35,-33,35,-41,35,35,-61,-36,-35,-37,-42,-71,-52,35,-58,-62,-63,-34,-26,35,35,-57,35,35,35,35,197,-31,]),'ECHO':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,32,39,40,41,42,63,64,78,79,86,87,89,91,92,93,94,124,127,128,135,147,150,153,158,159,163,164,173,175,177,178,179,180,181,183,184,193,194,195,201,203,204,205,211,212,213,214,215,217,219,220,221,222,223,225,226,227,229,231,232,],[36,36,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-72,-73,-78,-104,-79,-80,-2,-78,-82,-81,-89,-75,-72,-111,-110,-103,-74,-106,-66,-68,-105,-43,-53,36,-76,36,36,-54,-51,36,36,-77,36,-67,36,-33,36,-41,36,36,-61,-36,-35,-37,-42,-71,-52,36,-58,-62,-63,-34,-26,36,36,-57,36,36,36,36,36,-31,]),'PRINT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,32,39,40,41,42,63,64,78,79,86,87,89,91,92,93,94,124,127,128,135,147,150,153,158,159,163,164,173,175,177,178,179,180,181,183,184,193,194,195,201,203,204,205,211,212,213,214,215,217,219,220,221,222,223,225,226,227,229,231,232,],[38,38,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-72,-73,-78,-104,-79,-80,-2,-78,-82,-81,-89,-75,-72,-111,-110,-103,-74,-106,-66,-68,-105,-43,-53,38,-76,38,38,-54,-51,38,38,-77,38,-67,38,-33,38,-41,38,38,-61,-36,-35,-37,-42,-71,-52,38,-58,-62,-63,-34,-26,38,38,-57,38,38,38,38,38,-31,]),'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,32,33,39,40,41,42,63,64,78,79,86,87,89,91,92,93,94,124,127,128,135,147,150,153,158,159,163,164,173,175,177,178,179,180,181,183,184,193,194,195,201,203,204,205,211,212,213,214,215,217,219,220,221,222,223,225,226,227,229,231,232,],[34,34,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-72,-73,-78,72,-104,-79,-80,-2,-78,-82,-81,-89,-75,-72,-111,-110,-103,-74,-106,-66,-68,-105,-43,-53,34,-76,34,34,-54,-51,34,34,-77,34,-67,34,-33,34,-41,34,34,-61,-36,-35,-37,-42,-71,-52,34,-58,-62,-63,-34,-26,34,34,-57,34,34,34,34,34,-31,]),'INTEGER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,67,68,74,78,79,80,82,83,84,85,86,87,88,89,91,92,93,94,95,110,111,124,125,127,128,132,133,135,139,143,146,147,150,153,158,159,163,164,173,175,177,178,179,180,181,183,184,189,193,194,195,201,203,204,205,211,212,213,214,215,217,219,220,221,222,223,225,226,227,229,231,232,],[40,40,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-72,-73,40,-78,40,40,-104,-79,-80,-2,40,-83,-84,-85,-86,-87,-88,40,40,40,-96,-97,-98,-99,-100,-101,-102,-78,-82,40,40,40,40,-81,-89,40,40,-107,-108,-109,-75,-72,40,-111,-110,-103,-74,-106,40,40,40,-66,40,-68,-105,40,40,-43,40,40,40,-53,40,-76,40,40,-54,-51,40,40,-77,40,-67,40,-33,40,-41,40,40,40,-61,-36,-35,-37,-42,-71,-52,40,-58,-62,-63,-34,-26,40,40,-57,40,40,40,40,40,-31,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,67,68,74,78,79,80,82,83,84,85,86,87,88,89,91,92,93,94,95,110,111,124,125,127,128,132,133,135,139,143,146,147,150,153,158,159,163,164,173,175,177,178,179,180,181,183,184,189,193,194,195,201,203,204,205,211,212,213,214,215,217,219,220,221,222,223,225,226,227,229,231,232,],[41,41,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-72,-73,41,-78,41,41,-104,-79,-80,-2,41,-83,-84,-85,-86,-87,-88,41,41,41,-96,-97,-98,-99,-100,-101,-102,-78,-82,41,41,41,41,-81,-89,41,41,-107,-108,-109,-75,-72,41,-111,-110,-103,-74,-106,41,41,41,-66,41,-68,-105,41,41,-43,41,41,41,-53,41,-76,41,41,-54,-51,41,41,-77,41,-67,41,-33,41,-41,41,41,41,-61,-36,-35,-37,-42,-71,-52,41,-58,-62,-63,-34,-26,41,41,-57,41,41,41,41,41,-31,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,32,39,40,41,42,63,64,78,79,86,87,89,91,92,93,94,124,127,128,135,147,153,163,164,177,179,180,181,195,201,203,204,211,212,214,215,217,219,220,223,232,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-72,-73,-78,-104,-79,-80,-2,-78,-82,-81,-89,-75,-72,-111,-110,-103,-74,-106,-66,-68,-105,-43,-53,-76,-54,-51,-77,-67,-32,-33,-61,-36,-35,-37,-71,-52,-58,-62,-63,-34,-26,-57,-31,]),'RCURLY':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,32,39,40,41,42,63,64,78,79,86,87,89,91,92,93,94,124,127,128,135,147,153,163,164,174,177,179,180,181,183,184,194,195,196,201,203,204,205,207,211,212,213,214,215,217,219,220,223,226,229,232,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-72,-73,-78,-104,-79,-80,-2,-78,-82,-81,-89,-75,-72,-111,-110,-103,-74,-106,-66,-68,-105,-43,-53,-76,-54,-51,195,-77,-67,200,-33,204,-41,214,-61,215,-36,-35,-37,-42,220,-71,-52,223,-58,-62,-63,-34,-26,-57,-27,232,-31,]),'BREAK':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,32,39,40,41,42,63,64,78,79,86,87,89,91,92,93,94,124,127,128,135,147,153,163,164,177,179,180,181,195,201,203,204,211,212,214,215,217,219,220,223,227,232,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-72,-73,-78,-104,-79,-80,-2,-78,-82,-81,-89,-75,-72,-111,-110,-103,-74,-106,-66,-68,-105,-43,-53,-76,-54,-51,-77,-67,-32,-33,-61,-36,-35,-37,-71,-52,-58,-62,-63,-34,-26,-57,230,-31,]),'CONTINUE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,32,39,40,41,63,64,78,79,86,87,89,91,92,93,94,124,127,128,135,147,153,158,163,164,177,179,180,181,195,201,203,204,211,212,214,215,217,219,220,223,225,232,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-72,-73,-78,-104,-79,-80,-78,-82,-81,-89,-75,-72,-111,-110,-103,-74,-106,-66,-68,-105,-43,-53,-76,182,-54,-51,-77,-67,-32,202,-61,-36,-35,-37,-71,-52,-58,-62,-63,-34,-26,-57,182,-31,]),'SEMICOLON':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,32,37,39,40,41,63,64,66,70,71,76,77,78,79,81,86,87,89,91,92,93,94,99,100,103,106,107,108,109,112,113,116,121,124,127,128,132,135,136,137,147,153,154,156,157,161,163,164,166,168,169,170,177,179,180,181,182,190,192,195,198,199,201,202,203,204,211,212,214,215,217,219,220,223,230,232,234,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-72,-73,-78,79,-104,-79,-80,-78,-82,99,-92,-93,124,-69,-81,-89,127,-75,-72,-111,-110,-103,-74,-106,131,132,135,-72,-91,-82,-95,-46,-73,147,153,-66,-68,-105,160,-43,163,164,-53,-76,177,-70,179,186,-54,-51,-44,-49,-45,-50,-77,-67,-32,-33,203,211,212,-61,217,-65,-36,219,-35,-37,-71,-52,-58,-62,-63,-34,-26,-57,233,-31,217,]),'PLUS':([3,24,26,27,32,40,41,60,62,63,64,78,86,87,89,91,93,106,107,108,113,],[44,-82,-72,-73,-78,-79,-80,44,-72,-78,-82,-81,44,-72,-111,-110,-74,-72,44,-82,-73,]),'MINUS':([3,24,26,27,32,40,41,60,62,63,64,78,86,87,89,91,93,106,107,108,113,],[45,-82,-72,-73,-78,-79,-80,45,-72,-78,-82,-81,45,-72,-111,-110,-74,-72,45,-82,-73,]),'TIMES':([3,24,26,27,32,40,41,60,62,63,64,78,86,87,89,91,93,106,107,108,113,],[46,-82,-72,-73,-78,-79,-80,46,-72,-78,-82,-81,46,-72,-111,-110,-74,-72,46,-82,-73,]),'DIVIDE':([3,24,26,27,32,40,41,60,62,63,64,78,86,87,89,91,93,106,107,108,113,],[47,-82,-72,-73,-78,-79,-80,47,-72,-78,-82,-81,47,-72,-111,-110,-74,-72,47,-82,-73,]),'MOD':([3,24,26,27,32,40,41,60,62,63,64,78,86,87,89,91,93,106,107,108,113,],[48,-82,-72,-73,-78,-79,-80,48,-72,-78,-82,-81,48,-72,-111,-110,-74,-72,48,-82,-73,]),'EXP':([3,24,26,27,32,40,41,60,62,63,64,78,86,87,89,91,93,106,107,108,113,],[49,-82,-72,-73,-78,-79,-80,49,-72,-78,-82,-81,49,-72,-111,-110,-74,-72,49,-82,-73,]),'CONCAT':([24,26,27,32,40,41,62,63,64,77,78,81,87,89,90,91,92,97,102,106,108,113,122,156,171,210,],[50,51,-81,-78,-79,-80,51,-78,50,51,-81,51,51,50,51,51,51,51,51,51,50,-81,51,51,51,51,]),'IS_EQUAL':([24,26,27,32,40,41,62,63,64,78,89,91,97,],[-82,53,-81,-78,-79,-80,53,-78,-82,-81,-111,-110,53,]),'IDENTICAL':([24,26,27,32,40,41,62,63,64,78,89,91,97,],[-82,54,-81,-78,-79,-80,54,-78,-82,-81,-111,-110,54,]),'NOTEQUAL':([24,26,27,32,40,41,62,63,64,78,89,91,97,],[-82,55,-81,-78,-79,-80,55,-78,-82,-81,-111,-110,55,]),'LESSTHAN':([24,26,27,32,40,41,62,63,64,78,89,91,97,],[-82,56,-81,-78,-79,-80,56,-78,-82,-81,-111,-110,56,]),'GREATERTHAN':([24,26,27,32,40,41,62,63,64,78,89,91,97,],[-82,57,-81,-78,-79,-80,57,-78,-82,-81,-111,-110,57,]),'LESSEQUALTHAN':([24,26,27,32,40,41,62,63,64,78,89,91,97,],[-82,58,-81,-78,-79,-80,58,-78,-82,-81,-111,-110,58,]),'GREATEREQUALTHAN':([24,26,27,32,40,41,62,63,64,78,89,91,97,],[-82,59,-81,-78,-79,-80,59,-78,-82,-81,-111,-110,59,]),'RPAREN':([27,39,40,41,60,61,62,63,64,70,71,73,74,77,78,86,87,89,91,92,93,94,96,98,102,106,107,108,109,113,117,119,120,122,123,126,128,131,140,141,142,148,156,165,168,170,171,176,185,191,195,206,215,224,],[-73,-104,-79,-80,93,94,-72,-78,-82,-92,-93,118,121,-69,-81,-75,-72,-111,-110,-103,-74,-106,129,130,134,-72,-91,-82,-95,-73,149,151,-59,154,155,157,-105,-38,166,168,-47,172,-70,190,-49,-50,192,-60,-39,-48,-61,-40,-62,228,]),'EQUAL':([32,101,],[68,133,]),'OBJOP':([32,],[69,]),'INCREMENT':([32,101,],[70,70,]),'DECREMENT':([32,101,],[71,71,]),'AND':([39,40,41,63,64,78,89,91,92,],[83,-79,-80,-78,-82,-81,-111,-110,-103,]),'OR':([39,40,41,63,64,78,89,91,92,],[84,-79,-80,-78,-82,-81,-111,-110,-103,]),'XOR':([39,40,41,63,64,78,89,91,92,],[85,-79,-80,-78,-82,-81,-111,-110,-103,]),'COMMA':([40,41,63,64,76,77,78,89,91,120,126,140,141,142,144,145,156,168,170,191,],[-79,-80,-78,-82,125,-69,-81,-111,-110,152,125,167,125,-47,167,125,-70,-49,-50,-48,]),'RSQUARE':([40,41,63,64,77,78,89,91,142,144,145,156,168,170,191,],[-79,-80,-78,-82,-69,-81,-111,-110,-47,169,170,-70,-49,-50,-48,]),'COLON':([40,41,63,64,78,89,91,209,210,],[-79,-80,-78,-82,-81,-111,-110,221,222,]),'NEW':([68,],[104,]),'FGETS':([68,],[105,]),'ARRAY':([68,110,111,167,],[110,139,139,139,]),'LSQUARE':([68,110,111,167,],[111,143,143,143,]),'PUSH':([69,],[115,]),'POP':([69,],[116,]),'QUEUE':([104,],[136,]),'STACK':([104,],[137,]),'LCURLY':([118,129,130,134,149,151,172,218,],[150,158,159,162,173,175,193,225,]),'STDIN':([138,],[165,]),'FNARROW':([155,228,],[178,231,]),'CASE':([162,187,188,208,233,],[189,189,-29,-30,-28,]),'DEFAULT':([187,188,208,233,],[209,-29,-30,-28,]),'ELSE':([200,],[218,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,173,193,221,222,],[1,194,213,226,227,]),'cuerpo':([0,1,150,158,159,173,175,178,180,183,193,194,213,221,222,225,226,227,229,231,],[2,42,174,181,184,2,196,199,201,205,2,42,42,2,2,181,42,42,201,199,]),'arithmeticExpression':([0,1,28,43,68,88,133,150,158,159,173,175,178,180,183,193,194,213,221,222,225,226,227,229,231,],[3,3,60,86,107,60,107,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'if_elseStatement':([0,1,150,158,159,173,175,178,180,183,193,194,213,221,222,225,226,227,229,231,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'forStatement':([0,1,150,158,159,173,175,178,180,183,193,194,213,221,222,225,226,227,229,231,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'switchStatement':([0,1,150,158,159,173,175,178,180,183,193,194,213,221,222,225,226,227,229,231,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'arrayAsignation':([0,1,150,158,159,173,175,178,180,183,193,194,213,221,222,225,226,227,229,231,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'queueDeclaration':([0,1,150,158,159,173,175,178,180,183,193,194,213,221,222,225,226,227,229,231,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'queueEnqueue':([0,1,150,158,159,173,175,178,180,183,193,194,213,221,222,225,226,227,229,231,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'queueDequeue':([0,1,150,158,159,173,175,178,180,183,193,194,213,221,222,225,226,227,229,231,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'defineFunction':([0,1,150,158,159,173,175,178,180,183,193,194,213,221,222,225,226,227,229,231,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'anonymousFunction':([0,1,68,133,150,158,159,173,175,178,180,183,193,194,213,221,222,225,226,227,229,231,],[12,12,109,109,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'arrowFunction':([0,1,150,158,159,173,175,178,180,183,193,194,213,221,222,225,226,227,229,231,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'echo':([0,1,150,158,159,173,175,178,180,183,193,194,213,221,222,225,226,227,229,231,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'fgets':([0,1,150,158,159,173,175,178,180,183,193,194,213,221,222,225,226,227,229,231,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'stackDeclaration':([0,1,150,158,159,173,175,178,180,183,193,194,213,221,222,225,226,227,229,231,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'stackPush':([0,1,150,158,159,173,175,178,180,183,193,194,213,221,222,225,226,227,229,231,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'stackPop':([0,1,150,158,159,173,175,178,180,183,193,194,213,221,222,225,226,227,229,231,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'line':([0,1,150,158,159,173,175,178,180,183,193,194,213,221,222,225,226,227,229,231,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'print':([0,1,150,158,159,173,175,178,180,183,193,194,213,221,222,225,226,227,229,231,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'logicalCondition':([0,1,28,65,95,150,158,159,173,175,178,180,183,193,194,213,221,222,225,226,227,229,231,],[21,21,61,96,61,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'stringConcatenation':([0,1,28,36,38,43,50,51,52,65,67,68,74,80,82,88,95,110,111,125,132,133,139,143,146,150,158,159,173,175,178,180,183,189,193,194,213,221,222,225,226,227,229,231,],[24,24,64,64,64,64,89,64,64,64,64,108,64,64,64,64,64,64,64,64,64,108,64,64,64,24,24,24,24,24,24,24,24,64,24,24,24,24,24,24,24,24,24,24,]),'callFunction':([0,1,150,158,159,173,175,178,180,183,193,194,213,221,222,225,226,227,229,231,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'value':([0,1,28,36,38,43,50,51,52,65,67,68,74,80,82,88,95,110,111,125,132,133,139,143,146,150,158,159,173,175,178,180,183,189,193,194,213,221,222,225,226,227,229,231,],[26,26,62,77,81,87,90,91,92,97,102,106,122,77,97,87,97,77,77,156,97,106,77,77,171,26,26,26,26,26,26,26,26,210,26,26,26,26,26,26,26,26,26,26,]),'variableAsignation':([0,1,66,150,158,159,160,173,175,178,180,183,186,193,194,213,221,222,225,226,227,229,231,],[37,37,100,37,37,37,185,37,37,37,37,37,206,37,37,37,37,37,37,37,37,37,37,]),'comparingValue':([0,1,28,65,82,95,132,150,158,159,173,175,178,180,183,193,194,213,221,222,225,226,227,229,231,],[39,39,39,39,128,39,161,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'arithmeticOperator':([3,60,86,107,],[43,43,43,43,]),'comparingSign':([26,62,97,],[52,52,52,]),'values':([36,80,110,111,139,143,],[76,126,141,145,141,145,]),'conditionOperator':([39,],[82,]),'forStatementCondition':([66,],[98,]),'arrayDeclaration':([68,],[103,]),'arrayValue':([68,110,111,167,],[112,142,142,191,]),'arguments':([73,117,152,],[119,148,176,]),'arraysValues':([110,111,],[140,144,]),'ifStatementBody':([158,225,],[180,229,]),'forStatementBody':([159,],[183,]),'switchCases':([162,],[187,]),'switchCase':([162,187,],[188,208,]),'arrowBody':([178,231,],[198,234,]),'switchDefault':([187,],[207,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> cuerpo','programa',1,'p_programa','Analizador_sintactico.py',19),
  ('programa -> programa cuerpo','programa',2,'p_programa','Analizador_sintactico.py',20),
  ('cuerpo -> arithmeticExpression','cuerpo',1,'p_cuerpo','Analizador_sintactico.py',24),
  ('cuerpo -> if_elseStatement','cuerpo',1,'p_cuerpo','Analizador_sintactico.py',25),
  ('cuerpo -> forStatement','cuerpo',1,'p_cuerpo','Analizador_sintactico.py',26),
  ('cuerpo -> switchStatement','cuerpo',1,'p_cuerpo','Analizador_sintactico.py',27),
  ('cuerpo -> arrayAsignation','cuerpo',1,'p_cuerpo','Analizador_sintactico.py',28),
  ('cuerpo -> queueDeclaration','cuerpo',1,'p_cuerpo','Analizador_sintactico.py',29),
  ('cuerpo -> queueEnqueue','cuerpo',1,'p_cuerpo','Analizador_sintactico.py',30),
  ('cuerpo -> queueDequeue','cuerpo',1,'p_cuerpo','Analizador_sintactico.py',31),
  ('cuerpo -> defineFunction','cuerpo',1,'p_cuerpo','Analizador_sintactico.py',32),
  ('cuerpo -> anonymousFunction','cuerpo',1,'p_cuerpo','Analizador_sintactico.py',33),
  ('cuerpo -> arrowFunction','cuerpo',1,'p_cuerpo','Analizador_sintactico.py',34),
  ('cuerpo -> echo','cuerpo',1,'p_cuerpo','Analizador_sintactico.py',35),
  ('cuerpo -> fgets','cuerpo',1,'p_cuerpo','Analizador_sintactico.py',36),
  ('cuerpo -> stackDeclaration','cuerpo',1,'p_cuerpo','Analizador_sintactico.py',37),
  ('cuerpo -> stackPush','cuerpo',1,'p_cuerpo','Analizador_sintactico.py',38),
  ('cuerpo -> stackPop','cuerpo',1,'p_cuerpo','Analizador_sintactico.py',39),
  ('cuerpo -> line','cuerpo',1,'p_cuerpo','Analizador_sintactico.py',40),
  ('cuerpo -> print','cuerpo',1,'p_cuerpo','Analizador_sintactico.py',41),
  ('cuerpo -> logicalCondition','cuerpo',1,'p_cuerpo','Analizador_sintactico.py',42),
  ('cuerpo -> OPEN_TAG','cuerpo',1,'p_cuerpo','Analizador_sintactico.py',43),
  ('cuerpo -> CLOSE_TAG','cuerpo',1,'p_cuerpo','Analizador_sintactico.py',44),
  ('cuerpo -> stringConcatenation','cuerpo',1,'p_cuerpo','Analizador_sintactico.py',45),
  ('cuerpo -> callFunction','cuerpo',1,'p_cuerpo','Analizador_sintactico.py',46),
  ('switchStatement -> SWITCH LPAREN value RPAREN LCURLY switchCases switchDefault RCURLY','switchStatement',8,'p_switchStatement','Analizador_sintactico.py',53),
  ('switchDefault -> DEFAULT COLON programa','switchDefault',3,'p_switchDefault','Analizador_sintactico.py',57),
  ('switchCase -> CASE value COLON programa BREAK SEMICOLON','switchCase',6,'p_switchCase','Analizador_sintactico.py',60),
  ('switchCases -> switchCase','switchCases',1,'p_switchCases','Analizador_sintactico.py',63),
  ('switchCases -> switchCases switchCase','switchCases',2,'p_switchCases','Analizador_sintactico.py',64),
  ('if_elseStatement -> IF LPAREN logicalCondition RPAREN LCURLY ifStatementBody RCURLY ELSE LCURLY ifStatementBody RCURLY','if_elseStatement',11,'p_if_elseStatement','Analizador_sintactico.py',69),
  ('if_elseStatement -> IF LPAREN logicalCondition RPAREN LCURLY ifStatementBody','if_elseStatement',6,'p_if_elseStatement','Analizador_sintactico.py',70),
  ('ifStatementBody -> cuerpo','ifStatementBody',1,'p_ifStatementBody','Analizador_sintactico.py',82),
  ('ifStatementBody -> cuerpo CONTINUE SEMICOLON','ifStatementBody',3,'p_ifStatementBody','Analizador_sintactico.py',83),
  ('ifStatementBody -> CONTINUE SEMICOLON','ifStatementBody',2,'p_ifStatementBody','Analizador_sintactico.py',84),
  ('ifStatementBody -> ifStatementBody cuerpo','ifStatementBody',2,'p_ifStatementBody','Analizador_sintactico.py',85),
  ('forStatement -> FOR LPAREN forStatementCondition RPAREN LCURLY forStatementBody RCURLY','forStatement',7,'p_forStatement','Analizador_sintactico.py',97),
  ('forStatementCondition -> SEMICOLON SEMICOLON','forStatementCondition',2,'p_forStatementCondition','Analizador_sintactico.py',102),
  ('forStatementCondition -> variableAsignation SEMICOLON SEMICOLON variableAsignation','forStatementCondition',4,'p_forStatementCondition','Analizador_sintactico.py',103),
  ('forStatementCondition -> variableAsignation SEMICOLON comparingValue SEMICOLON variableAsignation','forStatementCondition',5,'p_forStatementCondition','Analizador_sintactico.py',104),
  ('forStatementBody -> cuerpo','forStatementBody',1,'p_forStatementBody','Analizador_sintactico.py',119),
  ('forStatementBody -> forStatementBody cuerpo','forStatementBody',2,'p_forStatementBody','Analizador_sintactico.py',120),
  ('arrayAsignation -> VAR EQUAL arrayDeclaration SEMICOLON','arrayAsignation',4,'p_arrayAsignation','Analizador_sintactico.py',130),
  ('arrayDeclaration -> ARRAY arraysValues RPAREN','arrayDeclaration',3,'p_arrayDeclaration','Analizador_sintactico.py',133),
  ('arrayDeclaration -> LSQUARE arraysValues RSQUARE','arrayDeclaration',3,'p_arrayDeclaration','Analizador_sintactico.py',134),
  ('arrayDeclaration -> arrayValue','arrayDeclaration',1,'p_arrayDeclaration','Analizador_sintactico.py',135),
  ('arraysValues -> arrayValue','arraysValues',1,'p_arraysValues','Analizador_sintactico.py',139),
  ('arraysValues -> arraysValues COMMA arrayValue','arraysValues',3,'p_arraysValues','Analizador_sintactico.py',140),
  ('arrayValue -> ARRAY values RPAREN','arrayValue',3,'p_arrayValue','Analizador_sintactico.py',144),
  ('arrayValue -> LSQUARE values RSQUARE','arrayValue',3,'p_arrayValue','Analizador_sintactico.py',145),
  ('stackDeclaration -> VAR EQUAL NEW STACK SEMICOLON','stackDeclaration',5,'p_stackDeclaration','Analizador_sintactico.py',150),
  ('stackPush -> VAR OBJOP PUSH LPAREN value RPAREN SEMICOLON','stackPush',7,'p_stackPush','Analizador_sintactico.py',153),
  ('stackPop -> VAR OBJOP POP SEMICOLON','stackPop',4,'p_stackPop','Analizador_sintactico.py',156),
  ('queueDeclaration -> VAR EQUAL NEW QUEUE SEMICOLON','queueDeclaration',5,'p_queueDeclaration','Analizador_sintactico.py',160),
  ('queueEnqueue -> VAR OBJOP PUSH LPAREN value RPAREN SEMICOLON','queueEnqueue',7,'p_queueEnqueue','Analizador_sintactico.py',163),
  ('queueDequeue -> VAR OBJOP POP SEMICOLON','queueDequeue',4,'p_queueDequeue','Analizador_sintactico.py',166),
  ('defineFunction -> FUNCTION ID LPAREN arguments RPAREN LCURLY programa RCURLY','defineFunction',8,'p_defineFunction','Analizador_sintactico.py',170),
  ('defineFunction -> FUNCTION ID LPAREN RPAREN LCURLY programa RCURLY','defineFunction',7,'p_defineFunction','Analizador_sintactico.py',171),
  ('arguments -> VAR','arguments',1,'p_arguments','Analizador_sintactico.py',176),
  ('arguments -> VAR COMMA arguments','arguments',3,'p_arguments','Analizador_sintactico.py',177),
  ('anonymousFunction -> FUNCTION LPAREN RPAREN LCURLY cuerpo RCURLY','anonymousFunction',6,'p_anonymousFunction','Analizador_sintactico.py',182),
  ('anonymousFunction -> FUNCTION LPAREN arguments RPAREN LCURLY cuerpo RCURLY','anonymousFunction',7,'p_anonymousFunction','Analizador_sintactico.py',183),
  ('arrowFunction -> FN LPAREN VAR RPAREN FNARROW arrowBody SEMICOLON','arrowFunction',7,'p_arrowFunction','Analizador_sintactico.py',188),
  ('arrowBody -> FN LPAREN VAR RPAREN FNARROW arrowBody','arrowBody',6,'p_arrowBody','Analizador_sintactico.py',191),
  ('arrowBody -> cuerpo','arrowBody',1,'p_arrowBody','Analizador_sintactico.py',192),
  ('echo -> ECHO values SEMICOLON','echo',3,'p_echo','Analizador_sintactico.py',197),
  ('print -> PRINT LPAREN values RPAREN SEMICOLON','print',5,'p_print','Analizador_sintactico.py',201),
  ('print -> PRINT value SEMICOLON','print',3,'p_print','Analizador_sintactico.py',202),
  ('values -> value','values',1,'p_values','Analizador_sintactico.py',206),
  ('values -> values COMMA value','values',3,'p_values','Analizador_sintactico.py',207),
  ('fgets -> VAR EQUAL FGETS LPAREN STDIN RPAREN SEMICOLON','fgets',7,'p_fgets','Analizador_sintactico.py',212),
  ('arithmeticExpression -> value','arithmeticExpression',1,'p_arithmeticExpressionNumber','Analizador_sintactico.py',215),
  ('arithmeticExpression -> STRING','arithmeticExpression',1,'p_arithmeticExpressionCastInt','Analizador_sintactico.py',221),
  ('arithmeticExpression -> LPAREN arithmeticExpression RPAREN','arithmeticExpression',3,'p_arithmeticExpressionGroup','Analizador_sintactico.py',228),
  ('arithmeticExpression -> arithmeticExpression arithmeticOperator arithmeticExpression','arithmeticExpression',3,'p_arithmeticExpression','Analizador_sintactico.py',233),
  ('callFunction -> ID LPAREN RPAREN SEMICOLON','callFunction',4,'p_callFunction','Analizador_sintactico.py',267),
  ('callFunction -> ID LPAREN value RPAREN SEMICOLON','callFunction',5,'p_callFunctionArguments','Analizador_sintactico.py',277),
  ('value -> VAR','value',1,'p_value','Analizador_sintactico.py',298),
  ('value -> INTEGER','value',1,'p_value','Analizador_sintactico.py',299),
  ('value -> FLOAT','value',1,'p_value','Analizador_sintactico.py',300),
  ('value -> STRING','value',1,'p_value','Analizador_sintactico.py',301),
  ('value -> stringConcatenation','value',1,'p_value','Analizador_sintactico.py',302),
  ('arithmeticOperator -> PLUS','arithmeticOperator',1,'p_arithmeticOperator','Analizador_sintactico.py',311),
  ('arithmeticOperator -> MINUS','arithmeticOperator',1,'p_arithmeticOperator','Analizador_sintactico.py',312),
  ('arithmeticOperator -> TIMES','arithmeticOperator',1,'p_arithmeticOperator','Analizador_sintactico.py',313),
  ('arithmeticOperator -> DIVIDE','arithmeticOperator',1,'p_arithmeticOperator','Analizador_sintactico.py',314),
  ('arithmeticOperator -> MOD','arithmeticOperator',1,'p_arithmeticOperator','Analizador_sintactico.py',315),
  ('arithmeticOperator -> EXP','arithmeticOperator',1,'p_arithmeticOperator','Analizador_sintactico.py',316),
  ('line -> variableAsignation SEMICOLON','line',2,'p_line','Analizador_sintactico.py',323),
  ('variableAsignation -> VAR EQUAL value','variableAsignation',3,'p_variableAsignation','Analizador_sintactico.py',329),
  ('variableAsignation -> VAR EQUAL arithmeticExpression','variableAsignation',3,'p_variableAsignation','Analizador_sintactico.py',330),
  ('variableAsignation -> VAR INCREMENT','variableAsignation',2,'p_variableAsignation','Analizador_sintactico.py',331),
  ('variableAsignation -> VAR DECREMENT','variableAsignation',2,'p_variableAsignation','Analizador_sintactico.py',332),
  ('variableAsignation -> VAR EQUAL stringConcatenation','variableAsignation',3,'p_variableAsignation','Analizador_sintactico.py',333),
  ('variableAsignation -> VAR EQUAL anonymousFunction','variableAsignation',3,'p_variableAsignation','Analizador_sintactico.py',334),
  ('comparingSign -> IS_EQUAL','comparingSign',1,'p_comparingSign','Analizador_sintactico.py',355),
  ('comparingSign -> IDENTICAL','comparingSign',1,'p_comparingSign','Analizador_sintactico.py',356),
  ('comparingSign -> NOTEQUAL','comparingSign',1,'p_comparingSign','Analizador_sintactico.py',357),
  ('comparingSign -> LESSTHAN','comparingSign',1,'p_comparingSign','Analizador_sintactico.py',358),
  ('comparingSign -> GREATERTHAN','comparingSign',1,'p_comparingSign','Analizador_sintactico.py',359),
  ('comparingSign -> LESSEQUALTHAN','comparingSign',1,'p_comparingSign','Analizador_sintactico.py',360),
  ('comparingSign -> GREATEREQUALTHAN','comparingSign',1,'p_comparingSign','Analizador_sintactico.py',361),
  ('comparingValue -> value comparingSign value','comparingValue',3,'p_comparingValue','Analizador_sintactico.py',368),
  ('logicalCondition -> comparingValue','logicalCondition',1,'p_logicalCondition','Analizador_sintactico.py',391),
  ('logicalCondition -> comparingValue conditionOperator comparingValue','logicalCondition',3,'p_logicalCondition','Analizador_sintactico.py',392),
  ('logicalCondition -> LPAREN logicalCondition RPAREN','logicalCondition',3,'p_logicalCondition','Analizador_sintactico.py',393),
  ('conditionOperator -> AND','conditionOperator',1,'p_conditionOperator','Analizador_sintactico.py',409),
  ('conditionOperator -> OR','conditionOperator',1,'p_conditionOperator','Analizador_sintactico.py',410),
  ('conditionOperator -> XOR','conditionOperator',1,'p_conditionOperator','Analizador_sintactico.py',411),
  ('stringConcatenation -> value CONCAT value','stringConcatenation',3,'p_stringConcatenationGroup','Analizador_sintactico.py',419),
  ('stringConcatenation -> stringConcatenation CONCAT stringConcatenation','stringConcatenation',3,'p_stringConcatenation','Analizador_sintactico.py',426),
]
